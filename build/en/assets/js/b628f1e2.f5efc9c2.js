"use strict";(self.webpackChunkrokae_doc=self.webpackChunkrokae_doc||[]).push([[9055],{4391:(r,e,o)=>{o.r(e),o.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"SDK/cpp/cpp_example","title":"\u4f7f\u7528\u793a\u4f8b","description":"\u672c\u6587\u6863\u8bf4\u660e\u4ecb\u7ecdC++\u9519\u8bef\u7801\u548c\u5f02\u5e38\u8bf4\u660e","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/2_SDK/2_cpp/4_\u4f7f\u7528\u793a\u4f8b.md","sourceDirName":"2_SDK/2_cpp","slug":"/SDK/cpp/cpp_example","permalink":"/Docs/en/docs/SDK/cpp/cpp_example","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/i18n/en/docusaurus-plugin-content-docs/current/2_SDK/2_cpp/4_\u4f7f\u7528\u793a\u4f8b.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"cpp_example","title":"\u4f7f\u7528\u793a\u4f8b","sidebar_label":"\u4f7f\u7528\u793a\u4f8b","description":"\u672c\u6587\u6863\u8bf4\u660e\u4ecb\u7ecdC++\u9519\u8bef\u7801\u548c\u5f02\u5e38\u8bf4\u660e"},"sidebar":"tutorialSidebar","previous":{"title":"\u6ce8\u610f\u4e8b\u9879\u4e0e\u95ee\u9898\u6392\u67e5","permalink":"/Docs/en/docs/SDK/cpp/cpp_problem"},"next":{"title":"\u9644\u5f55 C++ \u7c7b\u578b","permalink":"/Docs/en/docs/SDK/cpp/cpp_class"}}');var n=o(4848),a=o(8453);const s={id:"cpp_example",title:"\u4f7f\u7528\u793a\u4f8b",sidebar_label:"\u4f7f\u7528\u793a\u4f8b",description:"\u672c\u6587\u6863\u8bf4\u660e\u4ecb\u7ecdC++\u9519\u8bef\u7801\u548c\u5f02\u5e38\u8bf4\u660e"},i="\u4f7f\u7528\u793a\u4f8b",c={},d=[{value:"1 \u975e\u5b9e\u65f6\u63a5\u53e3",id:"1-\u975e\u5b9e\u65f6\u63a5\u53e3",level:2},{value:"\u793a\u4f8b\u4e00\uff1a\u673a\u5668\u4eba\u57fa\u672c\u64cd\u4f5c\uff0c\u4fe1\u606f\u67e5\u8be2\uff0cJog\uff0c\u62d6\u52a8\u7b49",id:"\u793a\u4f8b\u4e00\u673a\u5668\u4eba\u57fa\u672c\u64cd\u4f5c\u4fe1\u606f\u67e5\u8be2jog\u62d6\u52a8\u7b49",level:3},{value:"\u793a\u4f8b\u4e8c\uff1a\u975e\u5b9e\u65f6\u8fd0\u52a8\u6307\u4ee4",id:"\u793a\u4f8b\u4e8c\u975e\u5b9e\u65f6\u8fd0\u52a8\u6307\u4ee4",level:3},{value:"2 \u5b9e\u65f6\u8fd0\u52a8\u63a7\u5236",id:"2-\u5b9e\u65f6\u8fd0\u52a8\u63a7\u5236",level:2},{value:"\u793a\u4f8b\u4e00\uff1a\u7b1b\u5361\u5c14\u7a7a\u95f4\u963b\u6297\u63a7\u5236",id:"\u793a\u4f8b\u4e00\u7b1b\u5361\u5c14\u7a7a\u95f4\u963b\u6297\u63a7\u5236",level:3},{value:"6.2.2\u793a\u4f8b\u4e8c\uff1a\u4e0a\u4f4d\u673a\u8f68\u8ff9\u89c4\u5212\u6307\u4ee4\u7ec4\u5408",id:"622\u793a\u4f8b\u4e8c\u4e0a\u4f4d\u673a\u8f68\u8ff9\u89c4\u5212\u6307\u4ee4\u7ec4\u5408",level:3}];function l(r){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...r.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.header,{children:(0,n.jsx)(e.h1,{id:"\u4f7f\u7528\u793a\u4f8b",children:"\u4f7f\u7528\u793a\u4f8b"})}),"\n",(0,n.jsx)(e.p,{children:"\u672c\u7ae0\u5c55\u793a\u4e00\u4e9bC+\uff0b\u793a\u4f8b\u7a0b\u5e8f\uff0c\u66f4\u591a\u793a\u4f8b\u8bf7\u89c1\u8f6f\u4ef6\u5305\u4e2dexamples\u3002"}),"\n",(0,n.jsx)(e.h2,{id:"1-\u975e\u5b9e\u65f6\u63a5\u53e3",children:"1 \u975e\u5b9e\u65f6\u63a5\u53e3"}),"\n",(0,n.jsx)(e.h3,{id:"\u793a\u4f8b\u4e00\u673a\u5668\u4eba\u57fa\u672c\u64cd\u4f5c\u4fe1\u606f\u67e5\u8be2jog\u62d6\u52a8\u7b49",children:"\u793a\u4f8b\u4e00\uff1a\u673a\u5668\u4eba\u57fa\u672c\u64cd\u4f5c\uff0c\u4fe1\u606f\u67e5\u8be2\uff0cJog\uff0c\u62d6\u52a8\u7b49"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-cpp",children:'/**\r\n *@brief  \u793a\u4f8b-\u57fa\u7840\u7684\u4fe1\u606f\u67e5\u8be2\uff0c\u8ba1\u7b97\u6b63\u9006\u89e3\r\n */\r\ntemplate <WorkType wt, unsigned short dof>\r\nvoid example_basicOperation(Robot_T<wt, dof> *robot){\r\n  error_code ec;\r\n  // ***\u67e5\u8be2\u4fe1\u606f ***\r\n  auto robotinfo = robot->robotInfo(ec);\r\n  print(os,\uff02\u63a7\u5236\u5668\u7248\u672c\u53f7\uff1a",robotinfo.version,\uff02\u673a\u578b\uff1a",robotinfo.type);\r\n  print(os, "xCore-SDK \u7248\u672c\uff1a", robot->sdkVersion());\r\n  \r\n  // ***\u83b7\u53d6\u673a\u5668\u4eba\u5f53\u524d\u4f4d\u59ff\uff0c\u8f74\u89d2\u5ea6\uff0c\u57fa\u5750\u6807\u7cfb\u7b49\u4fe1\u606f ***\r\n  auto joint_pos = robot->jointPos(ec);//\u8f74\u89d2\u5ea6\uff3brad\uff3d\r\n  auto joint_vel = robot->jointVel(ec);//\u8f74\u901f\u5ea6\uff3brad/s\uff3d\r\n  auto joint_torque = robot->jointTorque(ec);//\u8f74\u529b\u77e9\uff3bNm\uff3d\r\n  auto tcp_xyzabc = robot->posture(CoordinateType::endInRef,ec);\r\n  auto flan_cart = robot->cartPosture (CoordinateType::flangeInBase, ec);\r\n  robot->baseFrame(ec); //\u57fa\u5750\u6807\u7cfb\r\n  print(os,"\u672b\u7aef\u76f8\u5bf9\u5916\u90e8\u53c2\u8003\u5750\u6807\u7cfb\u4f4d\u59ff",tcp_xyzabc);\r\n  print(os,"\u6cd5\u5170\u76f8\u5bf9\u57fa\u5750\u6807\u7cfb-",flan_cart);\r\n  \r\n  // *** \u8ba1\u7b97\u9006\u89e3 \uff06 \u6b63\u89e3 ***\r\n  auto model = robot->model ();\r\n  auto ik = model.calcIk(tcp_xyzabc, ec);\r\n  auto fk_ret = model.calcFk(ik, ec);\r\n}\r\n\r\n/**\r\n  * @brief  \u793a\u4f8b-\u6253\u5f00\u5173\u95ed\u62d6\u52a8\r\n  */\r\nvoid example_drag(BaseCobot *robot) {\r\n  error_code ec;\r\n  robot->setOperateMode (rokae::OperateMode::manual, ec);\r\n  robot->setPowerState(false,ec);//\u6253\u5f00\u62d6\u52a8\u4e4b\u524d\uff0c\u9700\u8981\u673a\u68b0\u81c2\u5904\u4e8e\u624b\u52a8\u6a21\u5f0f\u4e0b\u7535\u72b6\u6001\r\n  // \u7b1b\u5361\u5c14\u7a7a\u95f4\uff0c\u81ea\u7531\u62d6\u52a8\r\n  robot->enableDrag(DragParameter::cartesianSpace, DragParameter::freely,ec);print(os,\uff02\u6253\u5f00\u62d6\u52a8\uff02,ec,\uff02\u6309\u56de\u8f66\u7ee7\u7eed\uff02);std::this_thread::sleep_for(std::chrono::seconds(2));//\u7b49\u5f85\u5207\u6362\u63a7\u5236\u6a21\u5f0f\r\n  while(getchar () != \'\\n\');\r\n  robot->disableDrag(ec);\r\n  std::this_thread::sleep_for(std::chrono::seconds(2));//\u7b49\u5f85\u5207\u6362\u63a7\u5236\u6a21\u5f0f\r\n}\r\n  \r\n/**\r\n  * @brief \u793a\u4f8b-\u8bfb\u5199IO\uff0c\u5bc4\u5b58\u5668\r\n  */\r\nvoid example_io_register (BaseRobot *robot) {\r\n  error_code ec;\r\n  print(os,"D01_0\u5f53\u524d\u4fe1\u53f7\u503c\u4e3a\uff1a",robot->getDO(1,0,ec));robot->setSimulationMode(true, ec); //\u53ea\u6709\u5728\u6253\u5f00\u8f93\u5165\u4eff\u771f\u6a21\u5f0f\u4e0b\u624d\u53ef\u4ee5\u8bbe\u7f6eDI\r\n  robot->setDI(0, 2,true, ec);\r\n  print(os,"DI0_2\u5f53\u524d\u4fe1\u53f7\u503c\uff1a",robot->getDI(0,2,ec));robot->setSimulationMode(false,ec); // \u5173\u95ed\u4eff\u771f\u6a21\u5f0f\r\n  \r\n  //\u8bfb\u53d6\u5355\u4e2a\u5bc4\u5b58\u5668\uff0c\u7c7b\u578b\u4e3afloat\r\n  //\u5047\u8bbe\uff02register0 \uff02\u662f\u4e2a\u5bc4\u5b58\u5668\u6570\u7ec4\uff0c\u957f\u5ea6\u662f10\r\n  float val_f;\r\n  std::vector<float> val_af;\r\n  //\u8bfb\u7b2c 1 \u4e2a\uff0c\u5373\u72b6\u6001\u76d1\u63a7\u91cc\u7684 register0[1]\uff0c\u8bfb\u53d6\u7ed3\u679c\u8d4b\u503c\u7ed9 val_f\r\n  robot->readRegister("register0", 0, val_f, ec);\r\n  //\u8bfb\u7b2c 10 \u4e2a\uff0c\u5373\u72b6\u6001\u76d1\u63a7\u91cc\u7684 register0[10]\uff0c\u8bfb\u53d6\u7ed3\u679c\u8d4b\u503c\u7ed9 val_f\r\n  robot->readRegister("register0", 9, val_f,ec);\r\n  //\u8bfb\u6574\u4e2a\u6570\u7ec4\uff0c\u8d4b\u503c\u7ed9 val_af , val_af \u7684\u957f\u5ea6\u4e5f\u53d8\u4e3a 10\u3002\u6b64\u65f6 index \u53c2\u6570\u662f\u591a\u5c11\u90fd\u65e0\u6240\u8c13\r\n  robot->readRegister("register0", 9, val_af, ec);\r\n  \r\n  //\u8bfb\u53d6 int \u7c7b\u578b\u5bc4\u5b58\u5668\u6570\u7ec4\r\n  std::vector<int> val_ai;\r\n  robot->readRegister("register1", 1, val_ai, ec);\r\n  //\u5199\u5165 bool/bit \u7c7b\u578b\u5bc4\u5b58\u5668\r\n  robot->writeRegister("register2", 0, true, ec);\r\n}\r\n\r\n/**\r\n  * @brief \u793a\u4f8b-Jog \u673a\u5668\u4eba\r\n  * @param robot\r\n  */\r\nvoid example_jog(BaseRobot *robot){\r\n  error_code ec;\r\n  robot->setMotionControlMode(rokae::MotionControlMode::NrtCommand, ec);\r\n  robot->setOperateMode (rokae::OperateMode::manual,ec);//\u624b\u52a8\u6a21\u5f0f\u4e0bjog\r\n  print ( os ,"\u51c6\u5907Jog \u673a\u5668\u4eba\uff0c\u9700\u624b\u52a8\u6a21\u5f0f\u4e0a\u7535\uff0c\u8bf7\u786e\u8ba4\u5df2\u4e0a\u7535\u540e\u6309\u56de\u8f66\u952e");\r\n  //\u5bf9\u4e8e\u6709\u5916\u63a5\u4f7f\u80fd\u5f00\u5173\u7684\u60c5\u51b5\uff0c\u9700\u8981\u6309\u4f4f\u5f00\u5173\u624b\u52a8\u4e0a\u7535\r\n  robot->setPowerState(true, ec);\r\n  \r\n  print (os ,"--\u5f00\u59cbJog \u673a\u5668\u4eba--\\n \u4e16\u754c\u5750\u6807\u7cfb\u4e0b\uff0c\u6cbfz \uff0b\u65b9\u5411\u8fd0\u52a850mm \uff0c\u901f\u738750 %\uff0c\u7b49\u5f85\u673a\u5668\u4eba\u505c\u6b62\u8fd0\u52a8\u540e\u6309\u56de\u8f66\u7ee7\u7eed");\r\n  robot->startJog(JogOpt::world, 0.5, 50, 2, true, ec);\r\n  while(getchar () != \'\\n\');\r\n  print (os ,"\u8f74\u7a7a\u95f4\uff0c6 \u8f74\u8d1f\u5411\u8fde\u7eed\u8f6c\u52a8\uff0c\u901f\u73875 %\uff0c\u6309\u56de\u8f66\u505c\u6b62Jog ");robot->startJog(JogOpt::jointSpace, 0.05, 5000, 5, false,ec);\r\n  while(getchar () !=\'\\n \'); // \u6309\u56de\u8f66\u505c\u6b62\r\n  robot->stop(ec); // jog\u7ed3\u675f\u5fc5\u987b\u8c03\u7528 stop() \u505c\u6b62\r\n}\r\n\r\n/**\r\n  * @brief  \u793a\u4f8b-\u6253\u5f00\u548c\u5173\u95ed\u78b0\u649e\u68c0\u6d4b\r\n  */\r\ntemplate <unsigned short dof>\r\nvoid example_setCollisionDetection(Cobot<dof> *robot) {\r\n  error_code ec;\r\n  //\u8bbe\u7f6e\u5404\u8f74\u7075\u654f\u5ea6\uff0c\u8303\u56f4 0.01 ~2.0\uff0c\u76f8\u5f53\u4e8e RobotAssist \u4e0a\u8bbe\u7f6e\u7684 1 % ~ 200 %\r\n  //\u89e6\u53d1\u884c\u4e3a: \u5b89\u5168\u505c\u6b62; \u56de\u9000\u8ddd\u79bb 0.01m\r\n  robot->enableCollisionDetection({1.0,1.0,0.01,2.0,1.0,1.0, 1.0}, StopLevel::stop1,0.01,ec);\r\n  std::this_thread::sleep_for(std::chrono::seconds(2));\r\n  //\u5173\u95ed\u78b0\u649e\u68c0\u6d4b\r\n  robot->disableCollisionDetection(ec);\r\n}\n'})}),"\n",(0,n.jsx)(e.h3,{id:"\u793a\u4f8b\u4e8c\u975e\u5b9e\u65f6\u8fd0\u52a8\u6307\u4ee4",children:"\u793a\u4f8b\u4e8c\uff1a\u975e\u5b9e\u65f6\u8fd0\u52a8\u6307\u4ee4"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-cpp",children:'/**\r\n  * @brief  \u793a\u4f8b-\u8bbe\u7f6e\u8f74\u914d\u7f6e\u6570\u636e\uff08 confData \uff09\u5904\u7406\u591a\u9006\u89e3\u95ee\u9898\uff0c\u70b9\u4f4d\u9002\u7528\u673a\u578bxMateCR7\r\n  */\r\nvoid multiplePosture (xMateRobot &robot){\r\n  error_code ec;\r\n  std::string id;\r\n  \r\n  //\u672c\u6bb5\u793a\u4f8b\u4f7f\u7528\u9ed8\u8ba4\u5de5\u5177\u5de5\u4ef6\r\n  Toolset defaultToolset;\r\n  robot.setToolset(defaultToolset, ec);\r\n  \r\n  MoveJCommand moveJ({0.2434, -0.314,0.591,1.5456,0.314,2.173});\r\n  //\u540c\u6837\u7684\u672b\u7aef\u4f4d\u59ff\uff0cconfData \u4e0d\u540c\uff0c\u8f74\u89d2\u5ea6\u4e5f\u4e0d\u540c\r\n  moveJ.target.confData- {-67,100,88, -79,90, -120, 0,0};\r\n  robot.moveAppend({moveJ}, id,ec);\r\n  moveJ.target.confData- {-76,8,-133,-106, 103, 108,0,0};\r\n  robot.moveAppend({moveJ}, id,ec);\r\n  moveJ.target.confData- {-70, 8, -88, 90,-105,-25,0,0};\r\n  robot.moveAppend({moveJ}, id,ec);\r\n  robot.moveStart(ec);waitForFinish(robot, id, 0);\r\n}\r\n/**\r\n *@brief  \u793a\u4f8b-\u4e03\u8f74\u5197\u4f59\u8fd0\u52a8\uff06\u53d1\u751f\u78b0\u649e\u68c0\u6d4b\u540e\u6062\u590d\u8fd0\u52a8\uff0c\u70b9\u4f4d\u9002\u7528\u673a\u578bxMateER3  Pro\r\n */\r\n void redundantMove (xMateErProRobot &robot){\r\n  error_code ec;\r\n  std::string id;\r\n  \r\n  //\u672c\u6bb5\u793a\u4f8b\u4f7f\u7528\u9ed8\u8ba4\u5de5\u5177\u5de5\u4ef6\uff0c\u901f\u5ea6v500 \uff0c\u8f6c\u5f2f\u533afine\r\n  Toolset defaultToolset;\r\n  robot.setToolset(defaultToolset, ec);\r\n  robot.setDefaultSpeed(500,ec);\r\n  robot.setDefaultZone(0,ec);\r\n  \r\n  //\u53ef\u9009\uff1a\u8bbe\u7f6e\u78b0\u649e\u68c0\u6d4b\u4e8b\u4ef6\u56de\u8c03\u51fd\u6570\r\n  robot.setEventWatcher (Event::safety, [&] (const EventInfo &info){recoverFromCollision(robot, info);},ec);\r\n  MoveAbsJCommand moveAbsj({0, M_PI/6, 0,M_PI/3,0.M_PI_2,0});\r\n  //**1 \uff09\u53d8\u81c2\u89d2\u8fd0\u52a8 ** \r\n  MoveLCommand moveL1({0.562,0,0.432,M_PI, 0, -M_PI});\r\n  moveL1.target.elbow = 1.45;\r\n  robot.moveAppend({moveAbsj}, id, ec);\r\n  robot.moveAppend({moveL1}, id,ec);\r\n  moveL1.target.elbow= -1.51;\r\n  robot.moveAppend({moveL1}, id,ec);\r\n  robot.moveStart(ec);\r\n  //\u6700\u540e\u4e00\u6b21moveAppend () \u53d1\u9001\u4e00\u6761\u6307\u4ee4\uff0c\u6545index=0\r\n  waitForFinish(robot, id,0);\r\n  \r\n  // **2) 60\xb0 \u81c2\u89d2\u5706\u5f27**\r\n  CartesianPosition circle_p1({0.472, 0, 0.342, M_PI, 0, -M_PI}),circle_p2({0.602, 0, 0.342, M_PI, 0, -M_PI}),circle_a1({0.537, 0.065, 0.342, M_PI, 0, -M_PI}),circle_a2({0.537, -0.065, 0.342, M_PI, 0, -M_PI});\r\n\r\n  //\u81c2\u89d2\u90fd\u662f60\u2218\r\n  circle_p1.elbow=M_PI/3;\r\n  circle_p2.elbow=M_PI/3;\r\n  circle_a1.elbow=M_PI/3;\r\n  circle_a2.elbow=M_PI/3;\r\n  \r\n  MoveLCommand moveL2(circle_p1);\r\n  robot.moveAppend({moveL2}, id, ec);\r\n  MoveCCommand moveC1(circle_p2, circle_al),moveC2(circle_p1,circle2);\r\n  std::vector<MoveCCommand> movec_cmds = {moveC1, moveC2};\r\n  robot.moveAppend(movec_cmds, id, ec);\r\n  robot.moveStart(ec);\r\n  //\u6700\u540e\u4e00\u6b21moveAppend () \u53d1\u90012 \u6761\u6307\u4ee4\uff0c\u6545\u9700\u8981\u7b49\u5f85\u7b2c\u4e8c\u4e2a\u70b9\u5b8c\u6210\u540e\u8fd4\u56de\uff0cindex \u4e3a\u7b2c\u4e8c\u4e2a\u70b9\u7684\u4e0b\u6807\r\n  waitForFinish(robot, id, (int)movec_cmds.size ( ) -1);\r\n}\r\n\r\n/**\r\n  * @brief  \u793a\u4f8b-\u5e26\u5bfc\u8f68\u8fd0\u52a8\u3002\u70b9\u4f4d\u9002\u914d\u673a\u578bxMateSR4\r\n  */\r\ntemplate <WorkType wt, unsigned short dof>\r\nvoid moveWithRail(Robot_T<wt, dof> *robot) {\r\n  error_code ec;\r\n  bool is_rail_enabled;\r\n  robot->getRailParameter("enable", is_rail_enabled, ec);\r\n  if(!is_rail_enabled){\r\n    print(os,"\u672a\u5f00\u542f\u5bfc\u8f68");\r\n    return;\r\n  }\r\n  \r\n  //\u6253\u5f00\u5173\u95ed\u5bfc\u8f68\uff0c\u8bbe\u7f6e\u5bfc\u8f68\u53c2\u6570\r\n  //\u8bbe\u7f6e\u5bfc\u8f68\u53c2\u6570\u548c\u57fa\u5750\u6807\u7cfb\u9700\u8981\u91cd\u542f\u63a7\u5236\u5668\u751f\u6548\uff0c\u8fd9\u91cc\u4ec5\u5c55\u793a\u63a5\u53e3\u8c03\u7528\u65b9\u6cd5\r\n  robot->setRailParameter("enable", true,ec); //\u6253\u5f00\u5bfc\u8f68\u529f\u80fd\r\n  robot->setRailParameter("maxSpeed", 1, ec); //\u8bbe\u7f6e\u6700\u5927\u901f\u5ea61m/s\r\n  robot->setRailParameter("softLimit", std::vector<double>({-0.8,0.8}),ec); //\u8bbe\u7f6e\u8f6f\u9650\u4f4d\u4e3a+-.8m\r\n  robot->setRailParameter("reductionRatio",1.0,ec);//\u8bbe\u7f6e\u51cf\u901f\u6bd4\r\n  auto curr = robot->BaseRobot::jointPos(ec);\r\n  print(os, "\u5f53\u524d\u8f74\u89d2\u5ea6", robot->BaseRobot::jointPos(ec));\r\n  \r\n  //***Jog  \u5bfc\u8f68\u793a\u4f8b***\r\n  // \u624b\u52a8\u6a21\u5f0f\u4e0a\u7535\r\n  robot->setOperateMode(OperateMode::manual, ec);\r\n  robot->setPowerState(true, ec);\r\n  std::vector<double> soft_limit;\r\n  robot->getRailParameter("softLimit", soft_limit, ec);\r\n  // \u5728\u8f6f\u9650\u4f4d\u5185 Jog\r\n  double step = (curr.back() - soft_limit[0] > 0.1 ? 0.1 : (curr.back() - soft_limit[0])) * 1000.0;\r\n  // \u4ee5\u516d\u8f74\u673a\u578b\u8f74\u7a7a\u95f4\u70b9\u52a8\u4e3a\u4f8b\uff0cindex 0~5 \u4ee3\u8868 1-6 \u8f74, index=6 \u4ee3\u8868\u7b2c\u4e00\u4e2a\u5916\u90e8\u8f74\r\n  int ex_jnt_index = robot->robotInfo(ec).joint_num;\r\n  // \u5bfc\u8f68\u8f74\u7a7a\u95f4\u8d1f\u5411\u8fd0\u52a8 100mm\r\n  robot->startJog(JogOpt::jointSpace, 0.6, step, ex_jnt_index, false, ec);\r\n  // \u7b49\u5f85 Jog \u7ed3\u675f\r\n  while(true) {\r\n    std::this_thread::sleep_for(std::chrono::milliseconds(50));\r\n    if(robot->operationState(ec) != OperationState::jogging) break;\r\n  }\r\n  robot->stop(ec);\r\n\r\n// *** \u5e26\u5bfc\u8f68\u7684\u8fd0\u52a8\u6307\u4ee4\u793a\u4f8b ***\r\n CartesianPosition p0({0.56, 0.136, 0.416, M_PI, 0, M_PI}), p1({0.56, 0.136, 0.3, M_PI, 0, M_PI});\r\n p0.external = { 0.02 }; // \u5bfc\u8f68\u8fd0\u52a8\u5230 0.02m, \u4e0b\u540c\r\n p1.external = { -0.04 };\r\n MoveAbsJCommand abs_j_command({0, M_PI/6, -M_PI_2,0, -M_PI/3, 0 });\r\n abs_j_command.target.external = { 0.1 }; // \u5bfc\u8f68\u8fd0\u52a8\u5230 0.1m\r\n MoveJCommand j_command(p0);\r\n MoveLCommand l_command(p1);\r\n MoveCCommand c_command(p1, p0);\r\n \r\n // \u52a0\u81ea\u5b9a\u4e49\u4fe1\u606f\uff0c\u5c06\u5728\u8fd0\u52a8\u4fe1\u606f\u53cd\u9988\u4e2d\u8fd4\u56de\u51fa\u6765\r\n l_command.customInfo = "hello";\r\n std::string id;\r\n robot->moveAppend(abs_j_command, id, ec);\r\n robot->moveAppend(j_command, id, ec);\r\n robot->moveAppend(l_command, id, ec);\r\n robot->moveAppend(abs_j_command, id, ec);\r\n robot->moveAppend(c_command, id, ec);\r\n robot->moveStart(ec);\r\n waitForFinish(*robot, id, 0);\r\n}\n'})}),"\n",(0,n.jsx)(e.h2,{id:"2-\u5b9e\u65f6\u8fd0\u52a8\u63a7\u5236",children:"2 \u5b9e\u65f6\u8fd0\u52a8\u63a7\u5236"}),"\n",(0,n.jsx)(e.h3,{id:"\u793a\u4f8b\u4e00\u7b1b\u5361\u5c14\u7a7a\u95f4\u963b\u6297\u63a7\u5236",children:"\u793a\u4f8b\u4e00\uff1a\u7b1b\u5361\u5c14\u7a7a\u95f4\u963b\u6297\u63a7\u5236"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-cpp",children:'int main() {\r\n using namespace std;\r\n try {\r\n  std::string ip = "192.168.0.160";\r\n  std::error_code ec;\r\n  rokae::xMateErProRobot robot(ip, "192.168.0.100"); // \u672c\u673a\u5730\u5740 192.168.0.100\r\n \r\n  robot.setOperateMode(rokae::OperateMode::automatic,ec);\r\n  robot.setMotionControlMode(MotionControlMode::RtCommand, ec);\r\n  robot.setPowerState(true, ec);\r\n \r\n  auto rtCon = robot.getRtMotionController().lock();\r\n \r\n  // \u8bbe\u7f6e\u8981\u63a5\u6536\u6570\u636e\u3002\u5176\u4e2d jointPos_m \u662f\u672c\u793a\u4f8b\u7a0b\u5e8f\u4f1a\u7528\u5230\u7684\r\n  rtCon->startReceiveRobotState({RtSupportedFields::jointPos_m,RtSupportedFields::tauVel_c,RtSupportedFields::tcpPose_m, RtSupportedFields::elbow_m});\r\n \r\n  // \u8bfb\u53d6\u5b9e\u65f6\u72b6\u6001\u6570\u636e: \u529b\u77e9\u5fae\u5206\r\n  rtCon->updateRobotState();\r\n  std::array<double,7> array7 {};\r\n  rtCon->getStateData(RtSupportedFields::tauVel_c, array7);\r\n \r\n  std::array<double, 16> init_position {};\r\n  static bool init = true;\r\n  double time = 0;\r\n \r\n  rtCon->getStateData(RtSupportedFields::jointPos_m, array7);\r\n  std::array<double,7> q_drag_xm7p = {0, M_PI/6, 0, M_PI/3, 0, M_PI/2, 0};\r\n \r\n  // \u83b7\u53d6\u673a\u5668\u4eba\u5f53\u524d\u8f74\u89d2\u5ea6(\u9700\u8981\u8bbe\u7f6e"jointPos_m"\u4e3a\u8981\u63a5\u6536\u7684\u72b6\u6001\u6570\u636e)\r\n  // \u4ece\u5f53\u524d\u4f4d\u7f6e MoveJ \u8fd0\u52a8\u5230\u62d6\u62fd\u4f4d\u59ff\r\n  rtCon->MoveJ(0.5, array7, q_drag_xm7p);\r\n \r\n  // \u8bbe\u7f6e\u7b1b\u5361\u5c14\u7a7a\u95f4\u963b\u6297\u7cfb\u6570\uff0c\u5f00\u59cb\u7b1b\u5361\u5c14\u7a7a\u95f4\u963b\u6297\u8fd0\u52a8\r\n  rtCon->setCartesianImpedance({1000, 1000, 1000, 100, 100, 100}, ec);\r\n  rtCon->startMove(RtControllerMode::cartesianImpedance);\r\n  std::atomic<bool> stopManually { true };\r\n \r\n  std::function<CartesianPosition()> callback = [&, rtCon] {\r\n    time += 0.001;\r\n    if(init) {\r\n      rtCon->getStateData(RtSupportedFields::tcpPose_m, init_position);\r\n      init = false;\r\n    }\r\n    constexpr double kRadius = 0.2;\r\n    double angle = M_PI / 4 * (1 - std::cos(M_PI / 2 * time));\r\n    double delta_z = kRadius * (std::cos(angle) - 1);\r\n  \r\n    CartesianPosition output{};\r\n    output.pos = init_position;\r\n    output.pos[7] += delta_z;\r\n  \r\n    if(time > 20) {\r\n      output.setFinished(); // 20 \u79d2\u540e\u7ed3\u675f\r\n      stopManually.store(false); // loop \u4e3a\u975e\u963b\u585e\uff0c\u548c\u4e3b\u7ebf\u7a0b\u540c\u6b65\u505c\u6b62\u72b6\u6001\r\n    }\r\n    return output;\r\n  };\r\n \r\n  rtCon->setControlLoop(callback);\r\n  // \u975e\u963b\u585e loop\r\n  rtCon->startLoop(false);\r\n  while(stopManually.load());\r\n  } \r\n  catch (const std::exception &e) {\r\n    std::cout << e.what();\r\n  }\r\n  return 0;\r\n}\n'})}),"\n",(0,n.jsx)(e.h3,{id:"622\u793a\u4f8b\u4e8c\u4e0a\u4f4d\u673a\u8f68\u8ff9\u89c4\u5212\u6307\u4ee4\u7ec4\u5408",children:"6.2.2\u793a\u4f8b\u4e8c\uff1a\u4e0a\u4f4d\u673a\u8f68\u8ff9\u89c4\u5212\u6307\u4ee4\u7ec4\u5408"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-cpp",children:'int main() {\r\n using namespace std;\r\n try {\r\n std::string ip = "192.168.0.160";\r\n std::error_code ec;\r\n rokae::xMateErProRobot robot(ip, "192.168.0.180"); // **** XMate 7-axis\r\n robot.setOperateMode(rokae::OperateMode::automatic,ec);\r\n robot.setRtNetworkTolerance(20, ec);\r\n robot.setMotionControlMode(MotionControlMode::RtCommand, ec);\r\n robot.setPowerState(true, ec);\r\n auto rtCon = robot.getRtMotionController().lock();\r\n print(os, "Start receive");\r\n robot.startReceiveRobotState(std::chrono::milliseconds(1), \r\n{RtSupportedFields::jointPos_m, RtSupportedFields::elbow_m, RtSupportedFields::tcpPose_m});\r\n // \u793a\u4f8b\u7a0b\u5e8f\u4f7f\u7528\u673a\u578b: xMateER7 Pro\r\n // 1. \u4ece\u5f53\u524d\u4f4d\u7f6e MoveJ \u8fd0\u52a8\u5230\u62d6\u62fd\u4f4d\u7f6e\r\n std::array<double,7> q_drag_xm7p = {0, M_PI/6, 0, M_PI/3, 0, M_PI/2, 0};\r\n robot.updateRobotState(std::chrono::milliseconds(1));\r\n rtCon->MoveJ(0.4, robot.jointPos(ec), q_drag_xm7p);\r\n// 2. \u5706\u5f27\u8fd0\u52a8 (X-Y \u5e73\u9762\u4e0a)\r\n CartesianPosition start, aux, target;\r\n robot.updateRobotState(std::chrono::milliseconds(1));\r\n Utils::postureToTransArray(robot.posture(rokae::CoordinateType::endInRef, ec), \r\nstart.pos);\r\n Eigen::Matrix3d rot_start;\r\n Eigen::Vector3d trans_start, trans_aux, trans_end;\r\n Utils::arrayToTransMatrix(start.pos, rot_start, trans_start);\r\n trans_end = trans_start; trans_aux = trans_start;\r\n trans_aux[0] -= 0.28;\r\n trans_aux[1] -= 0.05;\r\n trans_end[1] -= 0.15;\r\n Utils::transMatrixToArray(rot_start, trans_aux, aux.pos);\r\n Utils::transMatrixToArray(rot_start, trans_end, target.pos);\r\n rtCon->MoveC(0.2, start, aux, target);\r\n // 3. \u76f4\u7ebf\u8fd0\u52a8\r\n Utils::postureToTransArray(robot.posture(rokae::CoordinateType::endInRef, ec), \r\nstart.pos);\r\n Utils::arrayToTransMatrix(start.pos, rot_start, trans_start);\r\n trans_end = trans_start;\r\n // \u6cbf x-0.1m, y-0.3m, z-0.25\r\n trans_end[0] -= 0.1;\r\n trans_end[1] -= 0.3;\r\n trans_end[2] -= 0.25;\r\n Utils::transMatrixToArray(rot_start, trans_end, target.pos);\r\n print(os, "MoveL start position:", start.pos, "Target:", target.pos);\r\n rtCon->MoveL(0.3, start, target);\r\n // 4. \u5173\u95ed\u5b9e\u65f6\u6a21\u5f0f\r\n robot.setMotionControlMode(rokae::MotionControlMode::NrtCommand, ec);\r\n robot.setOperateMode(rokae::OperateMode::manual, ec);\r\n } catch (const std::exception &e) {\r\n std::cout << e.what();\r\n }\r\n return 0;\r\n}\n'})})]})}function p(r={}){const{wrapper:e}={...(0,a.R)(),...r.components};return e?(0,n.jsx)(e,{...r,children:(0,n.jsx)(l,{...r})}):l(r)}},8453:(r,e,o)=>{o.d(e,{R:()=>s,x:()=>i});var t=o(6540);const n={},a=t.createContext(n);function s(r){const e=t.useContext(a);return t.useMemo((function(){return"function"==typeof r?r(e):{...e,...r}}),[e,r])}function i(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(n):r.components||n:s(r.components),t.createElement(a.Provider,{value:e},r.children)}}}]);